#if !defined DIAG_DB_H
#define DIAG_DB_H

#include "diag.h"

#ifdef	DIAG_DB_C
DIAG_EXPORT const DiagDBVersion DBversionID;
DIAG_EXPORT UINT8 g_OverridePassFilter;
DIAG_EXPORT UINT8 filterArray[(126+8)/8];
DIAG_EXPORT const DiagTraceDescriptor* diagTraceDesc;
DIAG_EXPORT const UINT32 _FirstCommandID;
DIAG_EXPORT const UINT32 _FirstReportID;
DIAG_EXPORT const UINT32 _LastCommandID;
DIAG_EXPORT const UINT32 _LastReportID;
#else
DIAG_IMPORT const DiagDBVersion DBversionID;
DIAG_IMPORT UINT8 g_OverridePassFilter;
DIAG_IMPORT UINT8 filterArray[(126+8)/8];
DIAG_IMPORT const DiagTraceDescriptor* diagTraceDesc;
DIAG_IMPORT const UINT32 _FirstCommandID;
DIAG_IMPORT const UINT32 _FirstReportID;
DIAG_IMPORT const UINT32 _LastCommandID;
DIAG_IMPORT const UINT32 _LastReportID;
#endif //DIAG_DB_C

DIAG_EXPORT	int             __trace_Diag__Debug__UDPicatReadyOn_1 (void);
DIAG_EXPORT	int             __trace_Diag__Debug__UDPicatReadyOff_2 (void);
DIAG_EXPORT	int             __trace_SW_PLAT__DIAG__ERROR_PRINTFTYPE (void);
DIAG_EXPORT	int             __trace_SW_PLAT__DIAG__PRINTF_ERROR_IN_PARAMS_NUMBER (void);
DIAG_EXPORT	int             __trace_Audio__HW__AUDIO_HW_PathsStatus (void);
DIAG_EXPORT	int             __trace_Audio__Organ__AUDIO_ORGAN_SlopeOffset (void);
DIAG_EXPORT	int             __trace_Audio__Organ__AUDIO_ORGAN_ReadFdiDataOK (void);
DIAG_EXPORT	int             __trace_Audio__Organ__AUDIO_ORGAN_ReadFdiDataERROR (void);
DIAG_EXPORT	int             __trace_Audio__HW__AUDIO_HW_PathEnableIgnore (void);
DIAG_EXPORT	int             __trace_Audio__HW__AUDIO_HW_PathEnableOK (void);
DIAG_EXPORT	int             __trace_Audio__HW__AUDIO_HW_PathEnableSTATUSERROR (void);
DIAG_EXPORT	int             __trace_Audio__HW__AUDIO_HW_PathDisableOK (void);
DIAG_EXPORT	int             __trace_Audio__HW__AUDIO_HW_PathMuteOK (void);
DIAG_EXPORT	int             __trace_VALI_IF__ATCMD_IF__ATOUT_CHAR (void);
DIAG_EXPORT	int             __trace_VALI_IF__ATCMD_IF__ATOUT (void);
DIAG_EXPORT	int             __trace_Diag__Utils__Print_RTC (void);
DIAG_EXPORT	int             __trace_Diag__Utils__ReadRTC_Failure (void);
DIAG_EXPORT	int             __trace_VALI_IF__ATCMD_IF__ALREADYRUNNING (void);
DIAG_EXPORT	int             __trace_VALI_IF__ATCMD_IF__STOPIFNOTSTARTED (void);
DIAG_EXPORT	int             __trace_VALI_IF__ATCMD_IF__ATCMDIFNOTSTARTEDINSENDAT (void);
DIAG_EXPORT	int             __trace_VALI_IF__ATCMD_IF__ATCMDIFNOTSTARTEDINSENDATCHAR (void);
DIAG_EXPORT	int             __trace_VALI_IF__MISC_IF__ATCMDSYSTEM (void);
DIAG_EXPORT	int             __trace_DIAG__Dispatcher__ExportedPtr (void);
DIAG_EXPORT	int             __trace_SW_PLAT__DIAG__COMMANDID_WRONG (void);
DIAG_EXPORT	int             __trace_SW_PLAT__DIAG__RX_SERVICEID_WRONG (void);
DIAG_EXPORT	int             __trace_SYSTEM__PROD__AT_SER_OK (void);
DIAG_EXPORT	int             __trace_FDI__Transport__BackNVMOpenError (void);
DIAG_EXPORT	int             __trace_FDI__Transport__StoreBackNVMLimitError (void);
DIAG_EXPORT	int             __trace_FDI__Transport__StoreBackNVMError (void);
DIAG_EXPORT	int             __trace_FDI__Transport__StoreBackNVMFile (void);
DIAG_EXPORT	int             __trace_FDI__Transport__LoadBackNVMError (void);
DIAG_EXPORT	int             __trace_FDI__Transport__LoadBackNVMWarning (void);
DIAG_EXPORT	int             __trace_FDI__Transport__LoadBackNVMFile (void);
DIAG_EXPORT	int             __trace_FDI__Transport__BackNVMValid (void);
DIAG_EXPORT	int             __trace_FDI__Transport__BackNVMInvalid (void);
DIAG_EXPORT	int             __trace_FDI__Transport__BackNVMCfgInvalid (void);
DIAG_EXPORT	int             __trace_FDI__Transport__BackNVMCfgValid (void);
DIAG_EXPORT	int             __trace_FDI__Transport__StoreBackNVMSuccess (void);
DIAG_EXPORT	int             __trace_FDI__Transport__StoreBackNVMFailure (void);
DIAG_EXPORT	int             __trace_FDI__Transport__LoadBackNVMSuccess (void);
DIAG_EXPORT	int             __trace_FDI__Transport__LoadBackNVMFailure (void);
DIAG_EXPORT	int             __trace_FDI__Transport__CreateDefaultBackNVMCfgSuccess (void);
DIAG_EXPORT	int             __trace_FDI__Transport__CreateDefaultBackNVMCfgFail (void);
DIAG_EXPORT	int             __trace_Diag__Utils__MaxOutMsgBodySize (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Open_Return_FileID (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Open_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Close_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Close_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Read_Bad_Input (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Read_Packet (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Read_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Read_Malloc_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Write_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Write_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Format_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Remove_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Remove_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FName_LIST_NOTEXISTS (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_NameList_Packet (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Rename_Succes (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Rename_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Status_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_Status_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_ChangeMode_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__F_ChangeMode_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Fseek_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Fseek_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__MaxFileNameLen (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FdvSize (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FdvSize_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FdvAvailableSize (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FdvAvailableSize_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FDI71 (void);
DIAG_EXPORT	int             __trace_FDI__Transport__FDI721 (void);
DIAG_EXPORT	int             __trace_FDI__Transport__mkdir_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__mkdir_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Rmdir_Success (void);
DIAG_EXPORT	int             __trace_FDI__Transport__Rmdir_Error (void);
DIAG_EXPORT	int             __trace_FDI__Transport__GetFdiVolumes_List (void);
DIAG_EXPORT	int             __trace_FDI__Transport__ExtendetMode (void);
DIAG_EXPORT	int             __trace_Diag__Utils__SetRTC_Failure (void);
DIAG_EXPORT	int             __trace_Diag__Utils__SetRTC_Success (void);
DIAG_EXPORT	int             __trace_Diag__Utils__ReadRTC_Calendar (void);
DIAG_EXPORT	int             __trace_Diag__Utils__ReadRTC_Success (void);
DIAG_EXPORT	int             __trace_Diag__Utils__SWVersion (void);
DIAG_EXPORT	int             __trace_VALI_IF__MISC_IF__RESET_IF_Info (void);
DIAG_EXPORT	int             __trace_VALI_IF__MISC_IF__RESET_IF_Fail (void);
DIAG_EXPORT	int             __trace_VALI_IF__MISC_IF__RESET_IF_Timeout (void);
DIAG_EXPORT	int             __trace_VALI_IF__CT_P_API__INIT_SUCCESS (void);
DIAG_EXPORT	int             __trace_VALI_IF__CT_P_API__TERM_SUCCESS (void);
DIAG_EXPORT	int             __trace_Validation__Utils__Export_IPMDrv_list (void);
DIAG_EXPORT	int             __trace_Diag__Utils__battery_cali_ok (void);
DIAG_EXPORT	int             __trace_Diag__Utils__battery_cali_error (void);
DIAG_EXPORT	int             __trace_Diag__Utils__battery_cali_debug (void);
DIAG_EXPORT	int             __trace_Diag__Utils__battery_calibration (void);
DIAG_EXPORT	int             __trace_Diag__Utils__bettery_calibration_vbat (void);
DIAG_EXPORT	int             __trace_Diag__Utils__battery_calibration_ibat (void);
DIAG_EXPORT	int             __trace_Diag__comMem__image (void);
DIAG_EXPORT	int             __trace_Diag__comMem__imageNO (void);
DIAG_EXPORT	int             __trace_SW_PLAT__PERFORMANCE__SAVE2FILE0 (void);
DIAG_EXPORT	int             __trace_SW_PLAT__PERFORMANCE__SAVE2FILE (void);
DIAG_EXPORT	int             __trace_Diag__comMem__EE_LOG_TXT (void);
DIAG_EXPORT	int             __trace_Diag__comMem__EE_LOG (void);
DIAG_EXPORT	int             __trace_Diag__comMem__EE_LOG_NOERR (void);
DIAG_EXPORT	int             __trace_Diag__comMem__DDR_RW (void);
DIAG_EXPORT	int             __trace_Diag__comMem__DDR_DiagOffline (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__ACMAudioPathEnable (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__ACMAudioPathDisable (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__ACMAudioDeviceEnable (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__ACMAudioDeviceDisable (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__ACMAudioDeviceMute (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__AACMAudioDeviceVolumeSet (void);
DIAG_EXPORT	int             __trace_AUDIO__ACM__ACMAudioSetCalibrationStateSet (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logOpen (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logBlock (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logClose (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logDbg0 (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logDbg1 (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logDbg2 (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logDbg3 (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__logDbg4 (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__NoLog (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__ABNORMAL (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE_LOG__STALL (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE__EE_CONFIG_PRINT (void);
DIAG_EXPORT	int             __trace_EE_HANDLER__EE__EE_CONFIG_OK (void);

#endif //DIAG_DB_H
